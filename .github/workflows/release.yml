name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger only on tags with 'v' prefix (e.g., v1.0.0)
  workflow_dispatch:  # Allows manual trigger

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build:
    runs-on: ${{ matrix.os }}
    needs: create_release  # Ensures the release is created before build jobs
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]  # Only one entry per OS
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'  # Adjust as needed for your project

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Build with Electron Forge
      - name: Make Packages with Electron Forge
        run: npm run make

      # Step 5: Upload Built Packages
      - name: Upload Built Packages
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: |
            out/make/*.exe  # For Windows
            out/make/*.dmg  # For macOS
            out/make/*.deb  # For Linux
          asset_name: ${{ matrix.os }}-package-${{ github.ref_name }}.${{ matrix.os == 'windows-latest' && 'exe' || matrix.os == 'macos-latest' && 'dmg' || 'deb' }}
          asset_content_type: application/octet-stream
